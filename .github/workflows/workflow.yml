# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD   
      
    - name: Building and Pushing User-service
      run: mvn package dockerfile:push --file user-service/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
   
    - name: Build and Push department-service
      run: mvn package dockerfile:push --file department-service/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push cloud-config-server
      run: mvn package dockerfile:push --file cloud-config-server/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push cloud-gateway
      run: mvn package dockerfile:push --file cloud-gateway/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push hystrix-dashboard
      run: mvn package dockerfile:push --file hystrix-dashboard/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push service-registry
      run: mvn package dockerfile:push --file service-registry/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
        ZONE_NAME: asia-southeast1-a
      with:
        args: apply -f k8s  # apply all configurations in k8s folder
      
